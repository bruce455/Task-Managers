
<div class="toast-container position-fixed top-0 start-40 p-3" style="z-index: 1060;">
  {{#each successMessages}}
    <div class="toast align-items-center text-bg-success border-0" role="alert"
         aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
      <div class="d-flex">
        <div class="toast-body">{{this}}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto"
                data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  {{/each}}
</div>

{{#if successMessages.length}}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.toast').forEach(el => new bootstrap.Toast(el).show());
  });
</script>
{{/if}}


  <main>
    <div class="custom-container">
      <button
        class="btn btn-primary"
        data-bs-toggle="modal"
        data-bs-target="#exampleModal">
        Create Event
      </button>                
    </div>
    {{!-- <div class="timezone-container text-end mb-3">
      <p>Your Timezone: <span id="timezone-display"></span></p>
    </div> --}}
    <div class="tasks-container">
      <!-- Daily Tasks Column -->
      <section class="tasks-column">
        <h2>Daily Tasks</h2>
        {{#if daily_tasks.length}}
        <div class="task-list scrollable-task-list">
          {{#each daily_tasks}}
          <div class="task-box" data-task-id="{{task_id}}">
            <div class="task-header">
              <h4 class="task-title">{{title}}</h4>
              <span class="task-description">{{description}}</span>
            </div>
            <div class="task-footer">
              <p class="task-priority"><strong><i class="fas fa-flag"></i> Priority:</strong> {{priority}}</p>
              <p class="task-reward"><strong><i class="fas fa-star"></i> Reward:</strong> {{rewards}}</p>
            </div>
          </div>
          {{/each}}
        </div>
        {{else}}
        <p>No tasks for today!</p>
        {{/if}}
      </section>

      <!-- Upcoming Tasks Column -->
      <section class="tasks-column">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h2 class="mb-0">Upcoming Tasks</h2>
          <div class="sorting-container d-flex align-items-center">
            <label for="sort-upcoming-tasks" class="me-2 fw-bold text-light">Sort By:</label>
            <select id="sort-upcoming-tasks" class="form-select form-select-sm bg-dark text-light border-0 w-auto">
              <option value="date">Date/Time</option>
              <option value="priority">Priority</option>
            </select>
          </div>
        </div>

        {{#if upcoming_tasks.length}}

        <div class="task-list scrollable-task-list" id="upcoming-tasks">
          {{#each upcoming_tasks}}
          <div class="task-box" data-priority="{{priority}}" data-due-date="{{due_date}}" data-task-id="{{task_id}}">
            <div class="task-header">
              <h4 class="task-title">{{title}}</h4>
              <span class="task-description">{{description}}</span>
            </div>
            <div class="task-details">
              <p><strong><i class="fas fa-calendar-alt"></i> Due Date:</strong> {{due_date}}</p>
            </div>
            <div class="task-footer">
              <p class="task-priority"><strong><i class="fas fa-flag"></i> Priority:</strong> {{priority}}</p>
              <p class="task-reward"><strong><i class="fas fa-star"></i> Reward:</strong> {{rewards}}</p>
            </div>
          </div>
          {{/each}}
        </div>
        {{else}}
        <p>No upcoming tasks!</p>
        {{/if}}
      </section>
    </div>
    {{!-- <h2 style="text-align: center;">üèÜ Leaderboard</h2>
<table class="table table-dark">
  <thead>
    <tr>
      <th>Rank</th>
      <th>User</th>
      <th>Points</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>{{users.[0].username}}</td>
      <td>{{users.[0].rewards_total}}</td>
    </tr>
    <tr>
      <td>2</td>
      <td>{{users.[1].username}}</td>
      <td>{{users.[1].rewards_total}}</td>
    </tr>
    <tr>
      <td>3</td>
      <td>{{users.[2].username}}</td>
      <td>{{users.[2].rewards_total}}</td>
    </tr>
  </tbody>
</table> --}}
  </main>

  <script>
    // Get the user's timezone and send it to the server
    document.addEventListener('DOMContentLoaded', () => {
      const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
      document.getElementById('timezone-display').textContent = timezone;

      // Send the timezone to the server via an AJAX request
      fetch('/set-timezone', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ timezone }),
      }).catch(err => console.error('Error sending timezone:', err));
    });

    const sortSelect = document.getElementById('sort-upcoming-tasks');
    const taskList = document.getElementById('upcoming-tasks');

    sortSelect.addEventListener('change', () => {
      const sortBy = sortSelect.value;
      const tasks = Array.from(taskList.querySelectorAll('.task-box'));

      tasks.sort((a, b) => {
        if (sortBy === 'date') {
          const dateA = new Date(a.getAttribute('data-due-date'));
          const dateB = new Date(b.getAttribute('data-due-date'));
          return dateA - dateB;
        } else if (sortBy === 'priority') {
          const priorityA = parseInt(a.getAttribute('data-priority'), 10);
          const priorityB = parseInt(b.getAttribute('data-priority'), 10);
          return priorityB - priorityA;
        }
      });

      // Reorder tasks in the DOM
      tasks.forEach(task => taskList.appendChild(task));
    });
  </script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.task-box').forEach(taskBox => {
      taskBox.addEventListener('click', () => {
        const taskId = taskBox.getAttribute('data-task-id');
        if (taskId) {
          openEditModal(taskId);
        }
      });
    });
  });
</script>

{{> currentTaskModal }}
{{> addTaskModal }}
